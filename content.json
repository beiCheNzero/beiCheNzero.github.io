[{"title":"vue源码的打包","date":"2022-02-26T11:28:25.000Z","path":"2022/02/26/vue源码的打包/","content":"<h3 id=\"vue源码打包\"><a href=\"#vue源码打包\" class=\"headerlink\" title=\"vue源码打包\"></a>vue源码打包</h3><ul>\n<li>1.导入<br><code>import &#123; createApp &#125; from &quot;vue&quot;</code></li>\n<li>2.安装<br><code>npm install vue@next</code><br>ERROR in ./src/vue/App/vue 1:0 Module parse failed : Unexpected token错误时，在安装：<br><code>npm install vue-loader -D</code><br>并在webpack.config.js中配置(配置方法同其他的loader一样)<br>继续安装：<br><code>npm install @vue/compiler-sfc -D</code><br>在webpack.config.js中继续配置：<br>引入：<br><code>const &#123; VueLoaderPlugin &#125; = require(&quot;vue-loader/dist/index&quot;)</code><br>插件配置：<br><code>new VueLoaderPlugin()</code></li>\n</ul>\n<h3 id=\"vue打包后不同的版本解析\"><a href=\"#vue打包后不同的版本解析\" class=\"headerlink\" title=\"vue打包后不同的版本解析\"></a>vue打包后不同的版本解析</h3><ul>\n<li>1.vue.global.js  <ul>\n<li>通过浏览器的<code>&lt;script src=&quot;...&quot;&gt;</code>直接使用</li>\n<li>通过CDN引入和下载的Vue版本会暴露一个全局的Vue来使用</li>\n</ul>\n</li>\n<li>2.vue.esm-browser.js<ul>\n<li>通过原生ES模块导入使用(浏览器中通过<code>&lt;script type=&quot;module&quot;&gt;</code>来使用)</li>\n</ul>\n</li>\n<li>3.vue.esm-bundle.js<ul>\n<li>用于webpack，rollup和parcel等构建工具</li>\n<li>构建工具中默认的是vue,runtime.esm-bundle.js</li>\n<li>如果我们需要解析模板template，那么需要手动指定vue.esm-bundle.js</li>\n</ul>\n</li>\n<li>4.vue.cjs.js<ul>\n<li>服务器端渲染使用</li>\n<li>通过requires()和node.js中使用</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"webpack-deb-server\"><a href=\"#webpack-deb-server\" class=\"headerlink\" title=\"webpack-deb-server\"></a>webpack-deb-server</h3><ul>\n<li>安装<br><code>npm install webpack-dev-server -D</code>  </li>\n<li>配置<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">  contentBase: &quot;./build&quot;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n在package.json的script中<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">    &quot;build&quot;: &quot;webpack --watch&quot;,</span><br><span class=\"line\">    &quot;serve&quot;: &quot;webpack serve&quot;</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n使用<code>npm run serve</code>执行，就可以开启一个本地服务。  </li>\n</ul>\n<p><em><strong>webpack-dev-server在编译之后<span color=\"red\">不会写入到任何文件</span>,而是将bundle文件保留在内存中</strong></em></p>\n<h3 id=\"HMR-模块热替换\"><a href=\"#HMR-模块热替换\" class=\"headerlink\" title=\"HMR(模块热替换)\"></a>HMR(模块热替换)</h3><p>Hot Module Replacement——模块热替换<br>模块热替换是指在 应用程序运行中，替换，添加，删除模块，而无需重新刷新整个界面</p>\n<ul>\n<li><p><strong>如何使用HMR？</strong><br>默认情况下，webpack-dev-server已经支持HMR，直接开启就是了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">target: &quot;web&quot;,//hot的伴随设置 </span><br><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">  hot: true</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>指定使用HMR的模块</strong><br>if(module.hot) {<br>module.hot.accept(“./util.js”, () =&gt; {<br>  console.log(“util更新了);<br>})<br>}</p>\n</li>\n<li><p>1.port设置监听端口，默认情况下时8080</p>\n</li>\n<li><p>2.open是否打开浏览器，默认时false</p>\n</li>\n<li><p>3.compress是否为静态文件开启gzip compression,默认时false</p>\n</li>\n<li><p>4.<strong>Proxy</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">  contentBase: &quot;./public&quot;,</span><br><span class=\"line\">  // 模块热替换HMR</span><br><span class=\"line\">  hot: true,</span><br><span class=\"line\">  host: &quot;0.0.0.0&quot;,</span><br><span class=\"line\">  port: 8888,</span><br><span class=\"line\">  open: true, // 在package.json中配置--open</span><br><span class=\"line\">  compress: true, //压缩</span><br><span class=\"line\">  Proxy: &#123;</span><br><span class=\"line\">    // 开启本地代理</span><br><span class=\"line\">    // 本地解决跨域的问题</span><br><span class=\"line\">    &quot;/api&quot;: &#123;</span><br><span class=\"line\">      target: &quot;url&quot;,</span><br><span class=\"line\">      pathRewrite: &#123;</span><br><span class=\"line\">        &quot;^/api&quot;: &quot;&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      secure: false,// 不懂的文档去找，或者ppt</span><br><span class=\"line\">      changeOrigin: true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"extensions和alias配置\"><a href=\"#extensions和alias配置\" class=\"headerlink\" title=\"extensions和alias配置\"></a>extensions和alias配置</h3><ul>\n<li><strong>extensions</strong>是解析到文件时自动添加扩展名<br>默认值是[‘.wasm’, ‘.mjs’, ‘.js’, ‘.json’]  </li>\n<li><strong>alias</strong>是给某些常见的路径起一个别名<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">  extensions: [&#x27;.jsx&#x27;, &#x27;.ts&#x27;, &#x27;.vue&#x27;],</span><br><span class=\"line\">  alias: &#123;</span><br><span class=\"line\">    &quot;js&quot;: path.resolve(__dirname, &quot;./src/js&quot;),</span><br><span class=\"line\">    &quot;@&quot;: path.resolve(__dirname, &quot;./sr&quot;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"开发-生产环境的分离\"><a href=\"#开发-生产环境的分离\" class=\"headerlink\" title=\"开发/生产环境的分离\"></a>开发/生产环境的分离</h2>建立三个文件放在主文件夹下的config文件夹下，<blockquote>\n<p>开发<br>common<br>生产</p>\n</blockquote>\n</li>\n</ul>\n<p>合并文件<br><code>npm install webpack-merge -D</code><br>在生产/开发的配置js文件中导入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const &#123; merge &#125; = require(&quot;webpack-merge&quot;);</span><br><span class=\"line\">const commenConfig = require(&#x27;公共配置js文件的地址&#x27;)</span><br></pre></td></tr></table></figure>\n<p>合并语法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = merge(CommonConfig, &#123;</span><br><span class=\"line\">  //生产/开发环境的部分配置。</span><br><span class=\"line\">  xxx: &quot;&quot;,</span><br><span class=\"line\">  xxx: &quot;&quot;,</span><br><span class=\"line\">  xxx: &quot;&quot;,</span><br><span class=\"line\">  xxx: &quot;&quot;,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><em><strong>同时在package.json的脚本里面也需要配置.</strong></em><br>添加<code>--config url</code></p>\n","comments":true,"categories":[{"name":"vue","slug":"vue","permalink":"http://example.com/categories/vue/"}],"tags":[]},{"title":"babel","date":"2022-02-26T10:53:59.000Z","path":"2022/02/26/babel/","content":"<h3 id=\"1-为什么用babel\"><a href=\"#1-为什么用babel\" class=\"headerlink\" title=\"1.为什么用babel?\"></a>1.为什么用babel?</h3><p><code>babel</code>是一个<span style=\"color: red\">工具链</span>(<code>webpack</code>也是),ES6以上的代码转换为向后兼容版本的JavaScript.包括<em>语法转换</em>，<em>源代码转换</em>等  </p>\n<h3 id=\"2-babel的使用\"><a href=\"#2-babel的使用\" class=\"headerlink\" title=\"2.babel的使用\"></a>2.babel的使用</h3><ul>\n<li>babel本身是一个独立的工具(和postcss一样)  </li>\n<li>安装库：<br>@babel/core - 核心代码<br>@babel/cli - 使我们在命令行使用babel(独立使用)<br><code>npx babel &quot;source-src&quot; --out-dir &quot;target-dist&quot;</code><br><code>npx babel &quot;源文件&quot; --out-dir &quot;目标文件&quot;</code></li>\n<li>1.<code>--out-dir</code>使输出一个文件夹，文件下存放有转换后的文件  </li>\n<li>2.<code>--out-file</code>使输出一个文件，输出的文件就在当前文件夹下  </li>\n<li>转换箭头使用的插件<br><code>npm install @babel/plugin-transform-arrow-funcitons -D</code>  </li>\n<li>转换语法<br><code>npx babel &quot;x.js&quot; --out-dir &quot;x.js&quot; --plugins=@babel/plugin-transform-arrow-functions</code>  </li>\n</ul>\n<p><strong>只能转换箭头函数</strong></p>\n<ul>\n<li>转换定义的数组/字符串的插件<br><code>npm install @babel/plugin-transform-block-scoping -D</code>  </li>\n</ul>\n<p><strong>不仅使定义的数组字符串转变，同时也将箭头函数一起转换了</strong><br><em><strong>我个人在这两个插件一起使用的时候就报错，单独使用任何一个都没问题</strong></em>  </p>\n<h3 id=\"3-babel的预设\"><a href=\"#3-babel的预设\" class=\"headerlink\" title=\"3.babel的预设\"></a>3.babel的预设</h3><ul>\n<li>安装<br><code>npm install @babel/preset-env -D</code></li>\n<li>使用<br><code>npx babel x.js --out-dir test -preset=@babel/preset-env</code></li>\n</ul>\n<blockquote>\n<p>将babel和webpack联系起来使用  </p>\n</blockquote>\n<p>先安装babel-loader:<br><code>npm install babel-loader -D</code><br>安装后添加配置到,添加指定使用的插件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    test: /\\.m?js$/,</span><br><span class=\"line\">    use: &#123;</span><br><span class=\"line\">      loader: &quot;babel-loader&quot;,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        plugins: [</span><br><span class=\"line\">          &quot;@babel/plugin-transform-arrow-funcitons&quot;,</span><br><span class=\"line\">          &quot;@babel/plugin-transform-block-scoping&quot;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>使用预设(preset)</strong><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    test: /\\.m?js$/,</span><br><span class=\"line\">    use: &#123;</span><br><span class=\"line\">      loader: &quot;babel-loader&quot;,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        presets: [</span><br><span class=\"line\">          [&quot;@babel/preset-env&quot;],</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n我们也可以将babel的配置信息独立放到一个文件中，抽离出来(babel.config.js):<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  presets: [</span><br><span class=\"line\">    [&quot;@babel/preset-env&quot;]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><em><strong>tip：rc = runtime compiler(运行时编译)</strong></em></p>\n","comments":true,"categories":[{"name":"webpack","slug":"webpack","permalink":"http://example.com/categories/webpack/"}],"tags":[{"name":"babel","slug":"babel","permalink":"http://example.com/tags/babel/"}]},{"title":"webpack—plugin","date":"2022-02-25T02:41:05.000Z","path":"2022/02/25/webpack—plugin/","content":"<h2 id=\"插件plugin\"><a href=\"#插件plugin\" class=\"headerlink\" title=\"插件plugin\"></a>插件plugin</h2><blockquote>\n<p>补充<br></p>\n</blockquote>\n<p>不需要安装，直接引入就好<br><code>const path = require(&#39;path&#39;)</code><br>获取当前文件所在位置，以<code>webpack.config.js</code>文件的父级文件夹为准，具体视情况而定</p>\n<ul>\n<li><strong>用法</strong><br><br><code>path.resolve(__dirname, &quot;./build&quot;)</code><br>表示路径在你父级文件下的build文件</li>\n</ul>\n<blockquote>\n<p>clean-webpack-plugin</p>\n</blockquote>\n<ul>\n<li><p><strong>tip：以下的插件都为局部安装，如需全局安装，-D改成-g就好，一般不建议全局安装</strong></p>\n<span id=\"more\"></span></li>\n<li><p><strong>安装</strong><br><br><code>npm install clean-webpack-plugin -D</code></p>\n</li>\n<li><p><strong>作用</strong><br><br>让你的项目打包更方便。<br><br>每次打包之前先把之前的文件删掉，避免每次打包之前需要删除旧的打包文件。会默认读取output里面需要删除的文件</p>\n</li>\n<li><p><strong>用法</strong><br><br>先导入：<br><code>const &#123; CleanWebpackPlugin &#125; = require(&quot;clean-webpack-plugin&quot;);</code><br>在webpack.config.js的导出中，具体代码如下：</p>\n</li>\n</ul>\n<p><em><strong>插件没有执行顺序</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">\tnew CleanWebpackPlugin(),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>html-webpack-plugin</p>\n</blockquote>\n<ul>\n<li><strong>安装</strong><br><br><code>npm install html-webpack-plugin -D</code></li>\n<li><strong>作用</strong><br><br>对index.js进行打包，这样就不需要在父级文件夹下在创建一个index.js文件</li>\n<li><strong>用法</strong><br><br>导入：<br><code>const HtmlWebpackPlugin = require(&quot;html-webpack-plugin&quot;)</code></li>\n</ul>\n<p><em><strong>这里不同于CleanWebpackPlugin的是，不需要加大括号</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">\tnew HtmlWebpackPlugin(),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>其他用法</strong><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new HtmlWebpackPlugin(),&#123;</span><br><span class=\"line\">\ttemplate: &quot;./public/index.html&quot;,</span><br><span class=\"line\">\ttitle: &#x27;hahha&#x27;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<code>template</code>是引用的模板。<br><code>title</code>修改index.html的title标签(网页的标题)</li>\n</ul>\n<p><em><strong>如果是引用vue的模板，还需要引入<code>DefinePlugin</code>插件，此插件是webpack的内置插件,不需要安装，但是引入和使用都和其他插件一样</strong></em></p>\n<blockquote>\n<p>copy-webpack-plugin</p>\n</blockquote>\n<ul>\n<li><strong>安装</strong><br><br><code>npm install copy-webpack-plugin -D</code></li>\n<li><strong>作用</strong><br><br>它是复制源树中已经存在的文件，作为构建过程的一部分。</li>\n<li><strong>用法</strong><br><br>导入：<br><code>const CopyWebpackPlugin = require(&quot;copy-webpack-plugin&quot;)</code><br><br>使用：<br><code>plugins: [new CopyWebpackPlugin()]</code></li>\n<li><strong>更多用法</strong><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [new CopyWebpackPlugin(&#123;</span><br><span class=\"line\">\tpatterns: [</span><br><span class=\"line\">\t\tfrom: path.resolve(__dirname, &quot;./public&quot;),</span><br><span class=\"line\">\t\tto: path.resolve(__dirname, &quot;./build&quot;),</span><br><span class=\"line\">\t\tglobOptions: &#123;</span><br><span class=\"line\">\t\t\tdot: true,</span><br><span class=\"line\">\t\t\tgitignore: true,</span><br><span class=\"line\">\t\t\tignore: [</span><br><span class=\"line\">\t\t\t\t// public文件下需要有两个文件以上，才能正确执行</span><br><span class=\"line\">\t\t\t\t&quot;**/index.html&quot;,</span><br><span class=\"line\">\t\t\t],</span><br><span class=\"line\">\t\t&#125;   </span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;)]</span><br></pre></td></tr></table></figure></li>\n</ul>\n","comments":true,"categories":[{"name":"webpack","slug":"webpack","permalink":"http://example.com/categories/webpack/"}],"tags":[{"name":"plugin","slug":"plugin","permalink":"http://example.com/tags/plugin/"}]},{"title":"webpack——url/file loader，加载字体","date":"2022-02-25T02:36:41.000Z","path":"2022/02/25/url-file-loader，加载字体/","content":"<h2 id=\"file-loader-url-loader的使用-加载字体文件\"><a href=\"#file-loader-url-loader的使用-加载字体文件\" class=\"headerlink\" title=\"file-loader/url-loader的使用,加载字体文件\"></a>file-loader/url-loader的使用,加载字体文件</h2><ul>\n<li>安装<br><br><code>npm install file-loader -D</code><br><br><code>npm install url-loader -D</code></li>\n<li>使用方式①<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.(eot|ttf|woff2?)$/,</span><br><span class=\"line\">\tuse: [&#123;</span><br><span class=\"line\">\t\tloader: &quot;file-loader&quot;,</span><br><span class=\"line\">\t\t//loader: &quot;url-loader&quot;,</span><br><span class=\"line\">\t\toptions: &#123;</span><br><span class=\"line\">\t\t\tname: &quot;font/[name]_[hash.6].[ext]&quot;,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span></li>\n<li>使用使用②<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.(eot|ttf|wordd2?)$/,</span><br><span class=\"line\">\t// type: &quot;asset/resource&quot;,//对应file-loader</span><br><span class=\"line\">\ttype: &quot;asset&quot; //可以说是包含url-loader</span><br><span class=\"line\">\tgenerator: &#123;</span><br><span class=\"line\">\t\t// 这里[hash.6]与[ext]中间是没有&quot;.&quot;的，默认会给我们加上</span><br><span class=\"line\">\t\tfilename: &quot;img/[name]_[hash.6][ext]&quot;，</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tparser: &#123;</span><br><span class=\"line\">\t\tdataUrlCondition: &#123;</span><br><span class=\"line\">\t\t\t// 10后面的单位是Byte,一般这里的数值不会很大</span><br><span class=\"line\">\t\t\tmaxSize: 10 * 1024,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>关于在打包时build文件夹下，出现两张图片，其中一张里面是代码的问题<br></p>\n</blockquote>\n</li>\n</ul>\n<p>首先分析一下<strong>产生的原因</strong>：在用webpack5时，使用旧版assets loader(<code>file-loader</code>/<code>url-loader</code>/<code>raw-loader</code>)出现了冲突<br><br><strong>解决办法</strong>：在css-loader的options里面加上<code>esModule: false</code><br>css-loader内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\tloader: &quot;css-loader&quot;,</span><br><span class=\"line\">\t\toptions: &#123;</span><br><span class=\"line\">\t\t\tesModule:false,//不使用es6的模块语法</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","comments":true,"categories":[{"name":"webpack","slug":"webpack","permalink":"http://example.com/categories/webpack/"}],"tags":[{"name":"loader","slug":"loader","permalink":"http://example.com/tags/loader/"}]},{"title":"webpack-插件的安装及使用","date":"2022-02-23T11:46:08.000Z","path":"2022/02/23/webpack-插件的安装及使用/","content":"<h2 id=\"loader\"><a href=\"#loader\" class=\"headerlink\" title=\"loader\"></a>loader</h2><p>首先解释一下loader是什么:<br>loader可以用于对<strong>模块的源代码</strong>进行转换<br><br>简单来说，就是把<strong>css文件看成一个模块</strong>，但是webpack并不知道这个模块是什么意思，通过loader将css模块<strong>转换</strong>成webpack能看懂的代码。</p>\n<h2 id=\"1、css-loader\"><a href=\"#1、css-loader\" class=\"headerlink\" title=\"1、css-loader\"></a>1、css-loader</h2><blockquote>\n<p>css-loader的安装</p>\n</blockquote>\n<p><code>npm install css-loader -D</code></p>\n<blockquote>\n<p>css-loader的使用</p>\n</blockquote>\n<ul>\n<li><strong>内联方式</strong><br><br>在引入的样式前加上使用的loader，并用**!**进行分割</li>\n</ul>\n<p><code>import &quot;css-loader!../...(css文件地址)&quot;;</code></p>\n<span id=\"more\"></span>\n\n<ul>\n<li><strong>配置方式</strong><br><br>新建一个<strong>webpack.config.js</strong>文件<br><br>module.rules的配置如下<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const &#123; options &#125; = require(&#x27;less&#x27;);</span><br><span class=\"line\">const path = require(&#x27;path&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  entry: &quot;./src/main.js&quot;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    //获取当前文件的路径 </span><br><span class=\"line\">    path: path.resolve(__dirname, &quot;./build&quot;),</span><br><span class=\"line\">    filename: &quot;build.js&quot;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  module: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: /\\.css$/, //正则表达式</span><br><span class=\"line\">        // 1.loader的语法(语法糖)</span><br><span class=\"line\">        // loader: &quot;css-loader&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        // 2.use,完整写法</span><br><span class=\"line\">        // 可以添加其他参数</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;loader: &quot;css-loader&quot;&#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n有不太清楚的地方我都进行了注释。</li>\n</ul>\n<p><em><strong>此时css在代码界面并没有生效,css-loader只是负责将.css文件进行解析，并不会插入到界面中，此时还需要另外一个loader——style-loader。</strong></em></p>\n<h2 id=\"2、style-loader\"><a href=\"#2、style-loader\" class=\"headerlink\" title=\"2、style-loader\"></a>2、style-loader</h2><blockquote>\n<p>style-loader的安装</p>\n</blockquote>\n<p><code>npm install style-loader -D</code></p>\n<blockquote>\n<p>style-loader的使用(同css-loader)</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use: [</span><br><span class=\"line\">\t// 执行顺序应该是先css，然后style</span><br><span class=\"line\">\t// 但是use[]是从下往上、从后往前执行。</span><br><span class=\"line\">\t&#123;loader: &quot;style-loader&quot;&#125;,</span><br><span class=\"line\">\t&#123;loader: &quot;css-loader&quot;&#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、lessc、less-loader\"><a href=\"#3、lessc、less-loader\" class=\"headerlink\" title=\"3、lessc、less-loader\"></a>3、lessc、less-loader</h2><ul>\n<li>lessc</li>\n</ul>\n<p>lessc 独立的工具,与webpack没什么关系，主要用途就是把less转成css<br><br>全局/局部安装:<br><br><code>npm install less -g/-D</code></p>\n<p><em><strong>将lessc和less文件进行结合，需要less-loader插件。</strong></em></p>\n<ul>\n<li>less-loader</li>\n</ul>\n<p>全局/局部安装：<br><br><code>npm install lee-loader -g/-D</code><br><br>单独转换一个less文件命令：<br><code>npx lessc &quot;地址&quot; &quot;地址&quot;</code></p>\n<h2 id=\"4、postcss、postcss-loader\"><a href=\"#4、postcss、postcss-loader\" class=\"headerlink\" title=\"4、postcss、postcss-loader\"></a>4、postcss、postcss-loader</h2><ul>\n<li><strong>直接使用postCSS</strong><br><blockquote>\n<p>安装 <code>npm install postcss postcss-cli -D</code><br></p>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>安装插件<br><em>自动添加浏览器前缀</em><br><code>npm install autoprefixer -D</code><br></p>\n</blockquote>\n<blockquote>\n<p>使用：<br><code>npx postcss --use autoprefixer -o demo.css test.css</code><br><br>解释：<br>–use + 需要使用的插件 -o (输出) demo.css(出口), test.css(入口)<br></p>\n</blockquote>\n<ul>\n<li><strong>结合使用</strong><br><blockquote>\n<p>安装 <code>npm install postcss-loader -D</code><br></p>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>使用 <br></p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module: &#123;</span><br><span class=\"line\">\trules: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttest: /\\.css$/, //正则表达式</span><br><span class=\"line\">\t\t\t// 1.loader的语法(语法糖)</span><br><span class=\"line\">\t\t\t// loader: &quot;css-loader&quot;,</span><br><span class=\"line\">\t\t\t// 2.use,完整写法</span><br><span class=\"line\">\t\t\t// 可以添加其他参数</span><br><span class=\"line\">\t\t\tuse: [</span><br><span class=\"line\">\t\t\t\t// 执行顺序应该是先css，然后style</span><br><span class=\"line\">\t\t\t\t// 但是use[]是从下往上、从后往前执行。</span><br><span class=\"line\">\t\t\t\t// &quot;style-loader&quot;</span><br><span class=\"line\">\t\t\t\t&#123;loader: &quot;style-loader&quot;&#125;,</span><br><span class=\"line\">\t\t\t\t&#123;loader: &quot;css-loader&quot;&#125;,</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tloader: &quot;postcss-loader&quot;,</span><br><span class=\"line\">\t\t\t\t\toptions: &#123;</span><br><span class=\"line\">\t\t\t\t\t\tpostcssOptions: &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tplugins: [</span><br><span class=\"line\">\t\t\t\t\t\t\t\trequire(&quot;autoprefixer&quot;)</span><br><span class=\"line\">\t\t\t\t\t\t\t]</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t]</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttest: /\\.less/,</span><br><span class=\"line\">\t\t\tuse: [</span><br><span class=\"line\">\t\t\t\t&quot;style-loader&quot;,</span><br><span class=\"line\">\t\t\t\t&quot;css-loader&quot;,</span><br><span class=\"line\">\t\t\t\t&quot;less-loader&quot;</span><br><span class=\"line\">\t\t\t]</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>融合</strong></li>\n</ul>\n<p>将<code>webpack.config.js</code>中module下，rules中的less的转化和css的转化写在一起。<br><br><strong>1、分开写法</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.css/,</span><br><span class=\"line\">\tuse: [</span><br><span class=\"line\">\t\t&quot;style-loader&quot;,</span><br><span class=\"line\">\t\t&quot;css-loader&quot;,</span><br><span class=\"line\">\t\t&quot;postcss-loader&quot;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.less/,</span><br><span class=\"line\">\tuse: [</span><br><span class=\"line\">\t\t&quot;style-loader&quot;,</span><br><span class=\"line\">\t\t&quot;css-loader&quot;,</span><br><span class=\"line\">\t\t&quot;less-loader&quot;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>2、融合</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.(less|css)$/,</span><br><span class=\"line\">\tuse: [</span><br><span class=\"line\">\t\t&quot;style-loader&quot;,</span><br><span class=\"line\">\t\t&quot;css-loader&quot;,</span><br><span class=\"line\">\t\t&quot;less-loader&quot;,</span><br><span class=\"line\">\t\t&quot;postcss-loader&quot;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h4 id=\"插件postcss-preset-env\"><a href=\"#插件postcss-preset-env\" class=\"headerlink\" title=\"插件postcss-preset-env\"></a><em><strong>插件postcss-preset-env</strong></em></h4>等同于已经内置了<code>autoprefixer</code>插件，这个插件功能更全.<br></li>\n</ul>\n<p><strong>功能</strong> 进行css的转换和适配，自动添加浏览器的前缀，css样式的重置，可以识别#12345678, “78”就等同于是透明度，RGBA.</p>\n<blockquote>\n<p>安装 <code>npm install postcss-preset-env -D</code></p>\n</blockquote>\n<p><em><strong>以上笔记均是个人根据coderwhy老师的课程所写。</strong></em></p>\n","comments":true,"categories":[{"name":"webpack","slug":"webpack","permalink":"http://example.com/categories/webpack/"}],"tags":[{"name":"plugin","slug":"plugin","permalink":"http://example.com/tags/plugin/"}]},{"title":"webpack的基本使用","date":"2022-02-22T12:06:28.000Z","path":"2022/02/22/webpack的基本使用/","content":"<h2 id=\"安装webpack\"><a href=\"#安装webpack\" class=\"headerlink\" title=\"安装webpack\"></a>安装webpack</h2><p><strong>环境</strong></p>\n<blockquote>\n<p>1.安装nodejs</p>\n</blockquote>\n<p>在终端中可以通过<code>node -v</code>,<code>npm -v</code>来是否安装成功</p>\n<blockquote>\n<p>2.npm是跟随nodejs一起安装的</p>\n</blockquote>\n<ul>\n<li>可以通过nvm进行node安装以及管理。</li>\n<li>nvm的教程-地址:<a href=\"https://beichenzero.github.io/2021/10/09/nvm%E7%9A%84%E5%AE%89%E8%A3%85-windows/\" alt>nvm的安装-windows</a><blockquote>\n<p>3.webpack全局安装</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>webpack和webpack-cli是一起安装的，方便项目使用</strong></p>\n<p><code>npm install webpack webpack-cli -g</code></p>\n<blockquote>\n<p>4.执行<code>npm init (-y)</code></p>\n</blockquote>\n<ul>\n<li>这里的-y是默认全都yes执行</li>\n<li>然后列表文件会多一个<strong>package.json</strong></li>\n<li>很多配置都写在这个文件里面</li>\n</ul>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>5.webpack局部安装</p>\n</blockquote>\n<p>简写：<code>npm install webpack webpack-cli -D</code></p>\n<p>展开：<code>npm install webpack webpack-cli --save-dev</code></p>\n<h2 id=\"webpack的基本使用\"><a href=\"#webpack的基本使用\" class=\"headerlink\" title=\"webpack的基本使用\"></a>webpack的基本使用</h2><blockquote>\n<p>1.<code>npx webpack</code></p>\n</blockquote>\n<p>执行后会出现打包的文件，默认在终端文件下的一个文件，文件名<strong>dist</strong></p>\n<blockquote>\n<p>2.修改打包方式</p>\n</blockquote>\n<p>修改package.json文件的script<br><br>添加<code>&quot;build&quot;: &quot;webpack&quot;</code><br><br>在运行<code>npm run build</code>时，会默认在当前文件夹下的src下寻找index.js文件进行打包，否则会报错。</p>\n<p>如果入口文件非默认(<code>index.js</code>)，则可以指定入口/出口<br><br><code>npx webpack --entry ./src/main.js --output-path ./build</code></p>\n<ul>\n<li><em><strong>webpack默认支持打包js</strong></em></li>\n<li><em><strong>如果需要webpack能打包css，则需要进行其他设置，详情请移步<a href=\"https://beichenzero.github.io/2022/02/23/webpack-%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/\">webpack-插件的安装及使用</a></strong></em></li>\n</ul>\n","comments":true,"categories":[{"name":"webpack","slug":"webpack","permalink":"http://example.com/categories/webpack/"}],"tags":[]},{"title":"v-model的基本使用","date":"2022-02-22T11:59:50.000Z","path":"2022/02/22/v-model的基本使用/","content":"<h3 id=\"v-model的基本使用\"><a href=\"#v-model的基本使用\" class=\"headerlink\" title=\"v-model的基本使用\"></a>v-model的基本使用</h3><ul>\n<li>v-model三种常见的修饰符默认是string</li>\n<li>number的修饰符主要是将string转化成number类型</li>\n<li>trim修饰符主要是去除内容前后的空格<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;input type=&quot;text&quot; v-model.trim=&quot;message&quot;&gt;</span><br><span class=\"line\">  // &lt;input type=&quot;text&quot; v-model.number=&quot;message&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">  &lt;button @click=&quot;showType()&quot;&gt;查看类型&lt;/button&gt;</span><br><span class=\"line\">  &lt;button @click=&quot;showCon()&quot;&gt;查看内容&lt;/button&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  showType() &#123;</span><br><span class=\"line\">    console.log(this.message, typeof this.message);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  showCon() &#123;</span><br><span class=\"line\">    console.log(this.message);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<strong>仅截取部分核心代码</strong><br>EX:<br>217498daowh   值为217498      类型为number<br>njdkhaw3431   值为njdkhaw3431 类型为string</li>\n</ul>\n","comments":true,"categories":[{"name":"vue","slug":"vue","permalink":"http://example.com/categories/vue/"}],"tags":[{"name":"model","slug":"model","permalink":"http://example.com/tags/model/"}]},{"title":"监听器watch","date":"2022-02-22T11:15:09.000Z","path":"2022/02/22/监听器watch/","content":"<h2 id=\"1-监听器-侦听器的基本使用watch\"><a href=\"#1-监听器-侦听器的基本使用watch\" class=\"headerlink\" title=\"1. 监听器/侦听器的基本使用watch\"></a>1. 监听器/侦听器的基本使用watch</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch: &#123;</span><br><span class=\"line\">    // message是需要监听的data中的属性名称</span><br><span class=\"line\">    // newValue是变化后的新值</span><br><span class=\"line\">    // oldValue是变化前的旧值</span><br><span class=\"line\">    message: function(newValue, oldValue) &#123;</span><br><span class=\"line\">        // console.log(&quot;新值&quot;, newValue, &quot;旧值&quot; ,oldValue);</span><br><span class=\"line\">        this.queryAnwser();</span><br><span class=\"line\">        // 监听到变化后就执行搜索答案的方法</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其他的代码就没有放上去了，这里主要说明watch的用法。</p>\n<h3 id=\"2-监听器的配置选项\"><a href=\"#2-监听器的配置选项\" class=\"headerlink\" title=\"2. 监听器的配置选项\"></a>2. 监听器的配置选项</h3><p>默认情况下侦听器只会侦听数据本身的改变（对于内部发生的改变是监听不到的）<br>深度侦听(deep) / 立即执行(immediate)（一定会执行一次）<br><code>depp: true</code> 用于表示进行深度监听。<br><code>immediate: true</code> 用于表示在加载时就执行一次，无论被监听的值是否改变。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch: &#123;</span><br><span class=\"line\">  // 语法糖</span><br><span class=\"line\">  info(newValue, oldValue)&#123;</span><br><span class=\"line\">    console.log(&quot;new&quot;,newValue, &quot;old&quot;,oldValue);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // 普通写法</span><br><span class=\"line\">  info: &#123;</span><br><span class=\"line\">    handler: function(newInfo, oldInfo)&#123;</span><br><span class=\"line\">      console.log(&quot;new&quot;,newInfo, &quot;old&quot;,oldInfo);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    deep: true,//确认为深度监听</span><br><span class=\"line\">    immediate: true, //立即执行</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","comments":true,"categories":[{"name":"vue","slug":"vue","permalink":"http://example.com/categories/vue/"}],"tags":[{"name":"watch","slug":"watch","permalink":"http://example.com/tags/watch/"}]},{"title":"vue学习笔记","date":"2022-02-22T10:44:49.000Z","path":"2022/02/22/vue学习笔记/","content":"<h3 id=\"编程范式\"><a href=\"#编程范式\" class=\"headerlink\" title=\"编程范式\"></a>编程范式</h3><p><strong>①命令式编程 (how to do)</strong><br>  EX:js/jquery<br><strong>②声明式编程 what to do  框架(机器)帮助完成</strong><br>    EX:vue/react/angular</p>\n<h3 id=\"MVC——modle-view-controller-MVC\"><a href=\"#MVC——modle-view-controller-MVC\" class=\"headerlink\" title=\"MVC——modle view controller(MVC)\"></a>MVC——modle view controller(MVC)</h3><p>modle: 操作的数据<br>view: body里面的内容<br>controller: script里面的内容</p>\n<h3 id=\"MVVM——modle-view-view-modle-MVVC\"><a href=\"#MVVM——modle-view-view-modle-MVVC\" class=\"headerlink\" title=\"MVVM——modle view view_modle(MVVC)\"></a>MVVM——modle view view_modle(MVVC)</h3><p>view: DOM           template<br>view_modle: VUE<br>modle: plain js object    data、methods…</p>\n<span id=\"more\"></span>\n\n<h3 id=\"条件-列表渲染-diff算法\"><a href=\"#条件-列表渲染-diff算法\" class=\"headerlink\" title=\"条件-列表渲染-diff算法\"></a>条件-列表渲染-diff算法</h3><p>diff算法就是将旧的VNodes和新的Vnodes进行对比的过程，然后观察需要变换那些东西。</p>\n<h3 id=\"在用v-for便利数组时，如果是要更新-添加-删除-数组的内容\"><a href=\"#在用v-for便利数组时，如果是要更新-添加-删除-数组的内容\" class=\"headerlink\" title=\"在用v-for便利数组时，如果是要更新(添加/删除)数组的内容\"></a>在用v-for便利数组时，如果是要更新(添加/删除)数组的内容</h3><p><strong>v-for进行渲染的时候，我们通常会给元素或者组件绑定一个key属性</strong><br>没有加key的时候，vue的源码会执行patchUnkeyedChildren<br>三步：123<br>在加了key的时候，vue源码会执行patchKeyedChildren<br>五步：12345</p>\n<h3 id=\"计算属性-computed-和方法-methods-的区别\"><a href=\"#计算属性-computed-和方法-methods-的区别\" class=\"headerlink\" title=\"计算属性(computed)和方法(methods)的区别\"></a>计算属性(computed)和方法(methods)的区别</h3><p><strong>计算属性(computed)和方法(methods)的差别不大，但是计算属性是有缓存的。</strong><br>分别console打印三次，computed只会出现一次，methods会打印三次。<br>data中的数据是响应式的，当修改了data中打印在界面上的数据时，会重新渲染，也就是说如上的methods中的打印在再次执行多次。而computed还是只会执行一次.</p>\n<p><strong>computed的get和set方法</strong></p>\n<ul>\n<li>普通写法:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fullName: &#123;</span><br><span class=\"line\">  get: function()&#123;</span><br><span class=\"line\">    return this.firstName+&quot; &quot;+this.lastName;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  set: function(newValue)&#123;</span><br><span class=\"line\">    console.log(newValue);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>语法糖:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fullName: function()&#123;</span><br><span class=\"line\">  return this.firstName+&quot; &quot;+this.lastName;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure></li>\n</ul>\n","comments":true,"categories":[{"name":"vue","slug":"vue","permalink":"http://example.com/categories/vue/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"markdown常用语法","date":"2022-01-21T05:09:02.000Z","path":"2022/01/21/markdown常用语法/","content":"<p>本文主要记录markdown的基本语法，更多详细的语法请查看<a href=\"http://markdown.p2hp.com/basic-syntax/\">markdown官网</a></p>\n<h2 id=\"一、标题等级\"><a href=\"#一、标题等级\" class=\"headerlink\" title=\"一、标题等级\"></a>一、标题等级</h2><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a><strong>代码</strong></h3>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 一级标题</span><br><span class=\"line\">## 二级标题</span><br><span class=\"line\">### 三级标题</span><br><span class=\"line\">#### 四级标题</span><br><span class=\"line\">##### 五级标题</span><br><span class=\"line\">###### 六级标题</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a><strong>效果</strong></h3><blockquote>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6></blockquote>\n<p>\n<span id=\"more\"></span>\n\n</p><h2 id=\"二、字体\"><a href=\"#二、字体\" class=\"headerlink\" title=\"二、字体\"></a>二、字体</h2><h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a><strong>代码</strong></h3><ol>\n<li>加粗<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__加粗__</span><br><span class=\"line\">**加粗**</span><br></pre></td></tr></table></figure></li>\n<li>斜体<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_斜体_</span><br><span class=\"line\">*斜体*</span><br></pre></td></tr></table></figure></li>\n<li>斜体加粗<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">___斜体加粗___</span><br><span class=\"line\">***斜体加粗***</span><br></pre></td></tr></table></figure></li>\n<li>删除线<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~~删除线~~</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-1\"><a href=\"#效果-1\" class=\"headerlink\" title=\"效果\"></a><strong>效果</strong></h3><blockquote>\n<p><strong>加粗</strong><br><br><em>斜体</em><br><br><em><strong>斜体加粗</strong></em><br><br><del>删除线</del><br></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"三、块引用\"><a href=\"#三、块引用\" class=\"headerlink\" title=\"三、块引用\"></a>三、块引用</h2><h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a><strong>代码</strong></h3><ul>\n<li><em>这里可以有好多级，具体看你自己怎么用</em><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; 第一级</span><br><span class=\"line\">&gt;&gt; 第二级</span><br><span class=\"line\">&gt;&gt;&gt; 第三级</span><br><span class=\"line\">&gt;&gt;&gt;&gt; ....</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-2\"><a href=\"#效果-2\" class=\"headerlink\" title=\"效果\"></a><strong>效果</strong></h3><blockquote>\n<p>第一级</p>\n<blockquote>\n<p>第二级</p>\n<blockquote>\n<p>第三级</p>\n<blockquote>\n<p>….</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"四、列表\"><a href=\"#四、列表\" class=\"headerlink\" title=\"四、列表\"></a>四、列表</h2><h3 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a><strong>代码</strong></h3><ul>\n<li>有序列表<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 内容 </span><br><span class=\"line\">2. 内容</span><br><span class=\"line\">3. 内容</span><br></pre></td></tr></table></figure></li>\n<li>无序列表<br></li>\n</ul>\n<p><em>其中无序列表用+、-、*都可以</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ 内容 </span><br><span class=\"line\">- 内容</span><br><span class=\"line\">* 内容</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果-3\"><a href=\"#效果-3\" class=\"headerlink\" title=\"效果\"></a><strong>效果</strong></h2><blockquote>\n<p>有序列表</p>\n<blockquote>\n<ol>\n<li>内容 </li>\n<li>内容</li>\n<li>内容</li>\n</ol>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>无序列表</p>\n<blockquote>\n<ul>\n<li>内容 </li>\n</ul>\n<ul>\n<li>内容</li>\n</ul>\n<ul>\n<li>内容</li>\n</ul>\n</blockquote>\n</blockquote>\n<h2 id=\"五、分割线\"><a href=\"#五、分割线\" class=\"headerlink\" title=\"五、分割线\"></a>五、分割线</h2><h3 id=\"代码-4\"><a href=\"#代码-4\" class=\"headerlink\" title=\"代码\"></a><strong>代码</strong></h3><ul>\n<li>三个*或-都可以。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">***</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-4\"><a href=\"#效果-4\" class=\"headerlink\" title=\"效果\"></a><strong>效果</strong></h3></li>\n</ul>\n<hr>\n<hr>\n<h2 id=\"六、图片\"><a href=\"#六、图片\" class=\"headerlink\" title=\"六、图片\"></a>六、图片</h2><h3 id=\"代码-5\"><a href=\"#代码-5\" class=\"headerlink\" title=\"代码\"></a><strong>代码</strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片alt](图片地址 &#x27;图片标题&#x27;)</span><br><span class=\"line\">&lt;img src=&#x27;https://haixia-1303842518.cos.ap-guangzhou.myqcloud.com/%E6%B5%B7%E9%9C%9E/head-photo/-4ad73ad5fcaad4be(1).jpg&#x27; width=&quot;200px&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">![beichenzero_photo](https://haixia-1303842518.cos.ap-guangzhou.myqcloud.com/%E6%B5%B7%E9%9C%9E/head-photo/-4ad73ad5fcaad4be(1).jpg &#x27;beichenzero&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">alt为替代文本</span><br><span class=\"line\">图片地址为路径或是图片的网络地址</span><br><span class=\"line\">图片标题就是图片的标题</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-5\"><a href=\"#效果-5\" class=\"headerlink\" title=\"效果\"></a><strong>效果</strong></h3><ul>\n<li>这里有两种插入图片的方式，第一种是直接插入HTML的语法，使用img标签，可以修改图片的尺寸以及各种属性。</li>\n<li>第二种是使用markdown自身的语法插入。<br><img src=\"https://haixia-1303842518.cos.ap-guangzhou.myqcloud.com/%E6%B5%B7%E9%9C%9E/head-photo/-4ad73ad5fcaad4be(1).jpg\" width=\"200px\"></li>\n</ul>\n<p><img src=\"https://haixia-1303842518.cos.ap-guangzhou.myqcloud.com/%E6%B5%B7%E9%9C%9E/head-photo/-4ad73ad5fcaad4be(1).jpg\" alt=\"beichenzero_photo\"></p>\n<h2 id=\"七、超链接\"><a href=\"#七、超链接\" class=\"headerlink\" title=\"七、超链接\"></a>七、超链接</h2><h3 id=\"代码-6\"><a href=\"#代码-6\" class=\"headerlink\" title=\"代码\"></a><strong>代码</strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. &lt;a href=&quot;https://beichenzero.netlify.app/&quot; alt=&quot;&quot;&gt;地址一:北辰个人博客&lt;/a&gt;</span><br><span class=\"line\">2. [地址二:北辰个人博客](https://beichenzero.netlify.app/ &quot;beichenzero&quot;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-6\"><a href=\"#效果-6\" class=\"headerlink\" title=\"效果\"></a><strong>效果</strong></h3><ol>\n<li><a href=\"https://beichenzero.netlify.app/\" alt>地址一:北辰个人博客</a><br></li>\n<li><a href=\"https://beichenzero.netlify.app/\" title=\"beichenzero\">地址二:北辰个人博客</a></li>\n</ol>\n<h2 id=\"八、表格\"><a href=\"#八、表格\" class=\"headerlink\" title=\"八、表格\"></a>八、表格</h2><h3 id=\"代码-7\"><a href=\"#代码-7\" class=\"headerlink\" title=\"代码\"></a><strong>代码</strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表头  |  表头  |  表头</span><br><span class=\"line\">:---: | :---: | :---:</span><br><span class=\"line\">内容  |  内容  |  内容</span><br><span class=\"line\">内容  |  内容  |  内容</span><br><span class=\"line\"></span><br><span class=\"line\">:---:表示居中</span><br><span class=\"line\">:---表示左对齐(默认左对齐)</span><br><span class=\"line\">---:表示右对齐</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-7\"><a href=\"#效果-7\" class=\"headerlink\" title=\"效果\"></a><strong>效果</strong></h3><table>\n<thead>\n<tr>\n<th align=\"center\">表头</th>\n<th align=\"center\">表头</th>\n<th align=\"center\">表头</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">内容</td>\n<td align=\"center\">内容</td>\n<td align=\"center\">内容</td>\n</tr>\n<tr>\n<td align=\"center\">内容</td>\n<td align=\"center\">内容</td>\n<td align=\"center\">内容</td>\n</tr>\n</tbody></table>\n<h2 id=\"九、代码\"><a href=\"#九、代码\" class=\"headerlink\" title=\"九、代码\"></a>九、代码</h2><h3 id=\"代码-8\"><a href=\"#代码-8\" class=\"headerlink\" title=\"代码\"></a><strong>代码</strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`代码内容`</span><br><span class=\"line\">`&lt;a href=&#x27;https://beichenzero.github.io&#x27;&gt;北辰个人博客&lt;/a&gt;`</span><br><span class=\"line\">`...`</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-8\"><a href=\"#效果-8\" class=\"headerlink\" title=\"效果\"></a><strong>效果</strong></h3><p><code>&lt;a href=&#39;https://beichenzero.github.io&#39;&gt;北辰个人博客&lt;/a&gt;</code><br><code>&lt;img src=&quot;图片地址&quot; alt=&quot;&quot;&gt;</code></p>\n<h2 id=\"十、任务列表\"><a href=\"#十、任务列表\" class=\"headerlink\" title=\"十、任务列表\"></a>十、任务列表</h2><ul>\n<li><input checked disabled type=\"checkbox\"> 第一项任务</li>\n<li><input disabled type=\"checkbox\"> 第二项任务</li>\n<li><input disabled type=\"checkbox\"> 第三项任务</li>\n</ul>\n","comments":true,"categories":[],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://example.com/tags/markdown/"}]},{"title":"nvm的安装-windows","date":"2021-10-09T14:01:49.000Z","path":"2021/10/09/nvm的安装-windows/","content":"<h2 id=\"下载nvm的安装包\"><a href=\"#下载nvm的安装包\" class=\"headerlink\" title=\"下载nvm的安装包\"></a>下载nvm的安装包</h2><p><strong>一定要下载1.1.7版本的nvm！</strong><br><strong>(目前最新是1.1.9版本,可以使用1.1.9,也比较稳定)</strong></p>\n<ul>\n<li>事先需要卸载原有的node.js<br>下载地址：<a href=\"https://github.com/coreybutler/nvm-windows/releases\">https://github.com/coreybutler/nvm-windows/releases</a></li>\n<li>下载后双击exe文件安装</li>\n<li>安装后在环境变量中会默认看到<br><img src=\"/images/photo_01.png\"></li>\n<li>用户变量和系统变量中都会有</li>\n</ul>\n<p>对了下载完找到nvm的安装目录，打开setting.txt文件，添加上下面两个配置(选做)：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm node_mirror https://npm.taobao.org/mirrors/node/</span><br><span class=\"line\">nvm npm_mirror https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span> \n<!-- 截断 -->\n<ul>\n<li><code>nvm -v</code> 检验是否成功<br><img src=\"/images/photo_02.png\"><!-- <img src=\"../images/photo_02.png\"> --></li>\n</ul>\n<h2 id=\"安装node\"><a href=\"#安装node\" class=\"headerlink\" title=\"安装node\"></a>安装node</h2><ol>\n<li>查看版本 <code>nvm list available</code> </li>\n<li>下载node(选择你需要的版本下载即可)  </li>\n</ol>\n<p><strong>下载最新版本<code>nvm list latest</code></strong></p>\n<blockquote>\n<p>拿<code>16.11.0</code>版本作为例子<code>nvm install 16.11.0</code></p>\n</blockquote>\n<ol>\n<li>紧接着上面的语句在终端输入：<code>nvm use 16.11.0</code></li>\n</ol>\n<p><strong>install完了node版本后，一定要use你所安装的版本，一定！一定！一定！</strong>  </p>\n<h2 id=\"nvm常用命令\"><a href=\"#nvm常用命令\" class=\"headerlink\" title=\"nvm常用命令\"></a>nvm常用命令</h2><table>\n<thead>\n<tr>\n<th>Tables</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>nvm list</td>\n<td align=\"center\">查看已经安装的版本</td>\n</tr>\n<tr>\n<td>nvm list installed</td>\n<td align=\"center\">查看已经安装的版本</td>\n</tr>\n<tr>\n<td>nvm list available</td>\n<td align=\"center\">查看网络可以安装的版本</td>\n</tr>\n<tr>\n<td>nvm arch</td>\n<td align=\"center\">查看当前系统的位数和当前nodejs的位数</td>\n</tr>\n<tr>\n<td>nvm install [arch]</td>\n<td align=\"center\">安装制定版本的node 并且可以指定平台 version 版本号 arch 平台</td>\n</tr>\n<tr>\n<td>nvm on</td>\n<td align=\"center\">打开nodejs版本控制</td>\n</tr>\n<tr>\n<td>nvm off</td>\n<td align=\"center\">关闭nodejs版本控制</td>\n</tr>\n<tr>\n<td>nvm uninstall</td>\n<td align=\"center\">卸载制定的版本</td>\n</tr>\n<tr>\n<td>nvm use [version] [arch]</td>\n<td align=\"center\">切换制定的node版本和位数</td>\n</tr>\n<tr>\n<td>nvm version</td>\n<td align=\"center\">查看当前的版本</td>\n</tr>\n</tbody></table>\n<p><em>其中 [arch]表示系统位数，直接用64/32代替就好了</em></p>\n","comments":true,"categories":[],"tags":[{"name":"nvm","slug":"nvm","permalink":"http://example.com/tags/nvm/"}]},{"title":"electron创建项目","date":"2021-10-09T09:14:23.000Z","path":"2021/10/09/electron/","content":"<h1 id=\"利用脚手架创建一个新的项目\"><a href=\"#利用脚手架创建一个新的项目\" class=\"headerlink\" title=\"利用脚手架创建一个新的项目\"></a>利用脚手架创建一个新的项目</h1><ol>\n<li>创建一个electron的基础模板<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm create electron-app my-app</span><br></pre></td></tr></table></figure></li>\n<li>进入项目目录下<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd my-app</span><br></pre></td></tr></table></figure></li>\n<li>运行项目<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm start</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"打包程序\"><a href=\"#打包程序\" class=\"headerlink\" title=\"打包程序\"></a>打包程序</h2><ol>\n<li>打包程序，变为可运行exe程序<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run make</span><br></pre></td></tr></table></figure></li>\n<li>打包程序，变为可运行exe程序<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dist</span><br></pre></td></tr></table></figure></li>\n</ol>\n","comments":true,"categories":[{"name":"学习","slug":"学习","permalink":"http://example.com/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"electron","slug":"electron","permalink":"http://example.com/tags/electron/"}]}]